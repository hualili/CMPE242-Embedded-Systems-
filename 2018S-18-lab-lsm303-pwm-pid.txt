Lab LSM Sensor Integration with PWM and PID Motor Drive Testing On Pie 3
HL

This Lab is the continuation of the previous PWM lab, you will build embedded 
system for PWM testing. The goal is to integrate LSM303 sensor with PWM based 
motor control for PID controller applications. 

1. General Requirements 

   (1) Locate the connector(s) which expose the CPU I2C pin for LSM303 Sensor
   interface applications.  

   (2) Mount the LSM303 sensor on the stepper motor for testing.   

   (3) Write/modify PWM device driver program to allow both frequency and duty 
   cycle change per user application program input, so the motor can be stepped
   to either clock wise or counter clock wise director with 1/8 of the micro 
   steps, with the number of steps input from the user. 

   (4) Write an user application program to read LSM303 sensor input, then 
   and display this as the function of angular change of the motor; 

   (5) Write program to change and display PWM frequency and duty cycle, 
   in particular, find duty cycle change from the minimum to maximum, oberver
   the change effect on the motor, and record, analyze the observed data. 

   (6) in case of your sensor is Optic Sensor as an self selected design 
   option, read Optic sensor input instead LSM303 sensor intput.  

2. Write IEEE style lab report.

Note for ARM-11 based Software Design (Skip this part, if using Pie-3 board).  
   (1) Install linux distribution on your laptop. 
   (2) Install linux-arm-gcc on your laptop. 
   (3) Use make to compile and build sample user program leds.c from /linux/example folder. 
       Be sure the path to the linux-arm-gcc compiler is set correctly, you may use 

       $linux-arm-gcc -v 

       to check if it is set correctly and its version. 
   (4) Use make menuconfig to generate script needed to compile and build device driver program
       and/or OS kernel image, and use 
       make modules 
       to compile and build device driver program once make menucofig is done. 
   (5) Use device driver sample code from /drivers/char/ to build your PWM device driver. 
   (6) Once the user application program and the device driver was compiled and built, then 
       copy to USB stick and insert the USB stick to ARM development kit, then 
       install device driver by 
   
       insmod (the_name_of_my_PWMdriver) 

    (7) Then you can run your user application program. Once you done, remove un-install the 
       device driver module by 

       rmmod (the_name_of_my_firstdriver)

  

(END)   


 

